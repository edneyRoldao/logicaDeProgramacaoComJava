package aula61.expressoesRegulares;

/**
 * Basicamente sao padroes de pesquisa no formato String.
 * Servem para validar padroes como e-mails, cpf, telefone.

	Para criar expressoes regulares temos que utilizar os recursos a seguir:
	
	________________________________________________
	MODIFICADORES:
		(?i)	-	Ignora maiusculas e minusculas
		(?x)	-	comentarios
		(?m)	-	multilinhas
		(?s)	-	Dottal
	________________________________________________
 	_____________________________________________________________________________________
 	METACARACTERES
 		.	-	qualquer caracter
 		\d	-	numeros 											-	[0-9]
 		\D	-	nao aceita numeros									-	[^0-9]
 		\s	-	procura a ocorrencia de qualquer tipo de espaco		-	[ \t\n\x0B\f\r]
 		\S	-	qualquer coisa que nao seja espaco					-	[^\s]
 		\w	-	aceita letras e numeros								-	[a-zA-Z_0-9]
 		\W	-	qualquer coisa que nao seja letras e numeros
  	_____________________________________________________________________________________
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
  	
 * 
 * @author edneyroldao
 *
 */
public class ExpressaoRegular {
	
	public static void main(String[] args) {
		
		//Primeiro exemplo	-	vamos validar se o valor da variavel possui a palavra Java, sendo case sensitive
		String expReg = "Java";
		String texto = "Java";
		boolean temPadrao = texto.matches(expReg); //aqui estamos verificando se a variavel texto passa pela expressao
		System.out.println("exemplo 01: " + temPadrao);
		//fim
		
		//Segundo exemplo	-	Vamos montar o mesmo padrao que nao seja case sensitive usando o modificador (?i)
		String expReg2 = "(?i)Java";
		boolean temPadrao2 = "JAVA".matches(expReg2);
		System.out.println("exemplo 02: " + temPadrao2);
		//fim
		
		//Terceiro exemplo	-	Verificando a existencia de caracteres utilizando metacaracteres
		String expReg3 = ".";
		boolean temPadrao3 = "@".matches(expReg3);
		System.out.println("exemplo 03: " + temPadrao3);
		//fim
		
		//Quarto exemplo	-	Existencia de numeros, obs: temos que usar duas barras \\ pois a primeira e o caracter de scape
		boolean temPadrao4 = "2".matches("\\d");
		System.out.println("exemplo 04: " + temPadrao4);
		//fim
		
		//Quarto exemplo	-	verificando a axistencia de mais de um padrao, no caso tres caracteres
		String expReg5 = "...";
		System.out.println("exemplo 05: " + "acc".matches(expReg5));
		//fim
		
		//Quarto exemplo	-	verificando a axistencia de quatro numeros
		String expReg6 = "\\d\\d\\d\\d";
		System.out.println("exemplo 06: " + "acc".matches(expReg6));
		//fim
		
		
		
		
		
		
	}

}




























